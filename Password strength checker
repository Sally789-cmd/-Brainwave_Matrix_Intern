import re
import string
import random
import math

# Common passwords for checking against (expand as needed)
COMMON_PASSWORDS = set([
    '123456', 'password', 'qwerty', 'abc123', 'letmein', 'password1', '123123',
    'welcome', 'admin', '12345', 'qwertyuiop', 'password123', 'iloveyou', '123qwe'
])

# Function to check password strength
def check_password_strength(password):
    # Check password length
    if len(password) < 12:
        return "Password is too short! It should be at least 12 characters long."
    
    # Check for complexity: upper, lower, number, special character
    if not re.search(r'[A-Z]', password):
        return "Password should contain at least one uppercase letter."
    
    if not re.search(r'[a-z]', password):
        return "Password should contain at least one lowercase letter."
    
    if not re.search(r'[0-9]', password):
        return "Password should contain at least one number."
    
    if not re.search(r'[@$!%*?&^#]', password):
        return "Password should contain at least one special character (e.g., @, $, !, %, *, ?, &)."
    
    # Check if password is in the common passwords list
    if password.lower() in COMMON_PASSWORDS:
        return "Password is too common. Please choose a more unique password."

    # Check for dictionary words (basic check for common words in the password)
    if any(word in password.lower() for word in ["password", "admin", "welcome", "qwerty"]):
        return "Password contains easily guessable words. Please avoid common words."

    # Calculate password entropy to check randomness
    entropy = calculate_entropy(password)
    if entropy < 40:
        return "Password is too weak. Try using a more complex and random password."

    return "Password is strong!"

# Function to calculate entropy of the password (higher entropy = stronger password)
def calculate_entropy(password):
    unique_characters = set(password)
    password_length = len(password)
    entropy = 0
    for char in unique_characters:
        # Frequency of the character
        prob = password.count(char) / password_length
        entropy -= prob * math.log2(prob)  # Shannon entropy formula
    return entropy * password_length

# Test the function
if __name__ == "__main__":
    password = input("Enter a password to check its strength: ")
    print(check_password_strength(password))
